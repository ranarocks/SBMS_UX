{"remainingRequest":"D:\\Imp\\Learn\\SBMS_UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Imp\\Learn\\SBMS_UX\\node_modules\\@ngrx\\store\\fesm5\\store.js","dependencies":[{"path":"D:\\Imp\\Learn\\SBMS_UX\\node_modules\\@ngrx\\store\\fesm5\\store.js","mtime":1527081827000},{"path":"D:\\Imp\\Learn\\SBMS_UX\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530947965468},{"path":"D:\\Imp\\Learn\\SBMS_UX\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\n * @license NgRx 6.0.1\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n/** PURE_IMPORTS_START _angular_core,rxjs,rxjs_operators PURE_IMPORTS_END */\nimport { Inject, Injectable, InjectionToken, Injector, NgModule } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { distinctUntilChanged, map, observeOn, pluck, scan, withLatestFrom } from 'rxjs/operators';\nvar __extends$1 = (undefined && undefined.__extends) || /*@__PURE__*/ (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar INIT = '@ngrx/store/init';\nvar ActionsSubject = /** @class */ (function (_super) {\n    __extends$1(ActionsSubject, _super);\n    function ActionsSubject() {\n        return _super.call(this, { type: INIT }) || this;\n    }\n    ActionsSubject.prototype.next = function (action) {\n        if (typeof action === 'undefined') {\n            throw new TypeError(\"Actions must be objects\");\n        }\n        else if (typeof action.type === 'undefined') {\n            throw new TypeError(\"Actions must have a type property\");\n        }\n        _super.prototype.next.call(this, action);\n    };\n    ActionsSubject.prototype.complete = function () {\n        /* noop */\n    };\n    ActionsSubject.prototype.ngOnDestroy = function () {\n        _super.prototype.complete.call(this);\n    };\n    return ActionsSubject;\n}(BehaviorSubject));\nvar ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\nvar _INITIAL_STATE = /*@__PURE__*/ new InjectionToken('@ngrx/store Internal Initial State');\nvar INITIAL_STATE = /*@__PURE__*/ new InjectionToken('@ngrx/store Initial State');\nvar REDUCER_FACTORY = /*@__PURE__*/ new InjectionToken('@ngrx/store Reducer Factory');\nvar _REDUCER_FACTORY = /*@__PURE__*/ new InjectionToken('@ngrx/store Reducer Factory Provider');\nvar INITIAL_REDUCERS = /*@__PURE__*/ new InjectionToken('@ngrx/store Initial Reducers');\nvar _INITIAL_REDUCERS = /*@__PURE__*/ new InjectionToken('@ngrx/store Internal Initial Reducers');\nvar META_REDUCERS = /*@__PURE__*/ new InjectionToken('@ngrx/store Meta Reducers');\nvar STORE_FEATURES = /*@__PURE__*/ new InjectionToken('@ngrx/store Store Features');\nvar _STORE_REDUCERS = /*@__PURE__*/ new InjectionToken('@ngrx/store Internal Store Reducers');\nvar _FEATURE_REDUCERS = /*@__PURE__*/ new InjectionToken('@ngrx/store Internal Feature Reducers');\nvar _FEATURE_REDUCERS_TOKEN = /*@__PURE__*/ new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nvar FEATURE_REDUCERS = /*@__PURE__*/ new InjectionToken('@ngrx/store Feature Reducers');\nvar __read$1 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m)\n        return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n    }\n    catch (error) {\n        e = { error: error };\n    }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"]))\n                m.call(i);\n        }\n        finally {\n            if (e)\n                throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spread$1 = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read$1(arguments[i]));\n    return ar;\n};\nfunction combineReducers(reducers, initialState) {\n    if (initialState === void 0) {\n        initialState = {};\n    }\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n    for (var i = 0; i < reducerKeys.length; i++) {\n        var key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    var finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state === undefined ? initialState : state;\n        var hasChanged = false;\n        var nextState = {};\n        for (var i = 0; i < finalReducerKeys.length; i++) {\n            var key = finalReducerKeys[i];\n            var reducer = finalReducers[key];\n            var previousStateForKey = state[key];\n            var nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter(function (key) { return key !== keyToRemove; })\n        .reduce(function (result, key) {\n        return Object.assign(result, (_a = {}, _a[key] = object[key], _a));\n        var _a;\n    }, {});\n}\nfunction compose() {\n    var functions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        functions[_i] = arguments[_i];\n    }\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        var last = functions[functions.length - 1];\n        var rest = functions.slice(0, -1);\n        return rest.reduceRight(function (composed, fn) { return fn(composed); }, last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        return compose.apply(null, __spread$1(metaReducers, [reducerFactory]));\n    }\n    return reducerFactory;\n}\nfunction createFeatureReducerFactory(metaReducers) {\n    var reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0\n        ? compose.apply(void 0, __spread$1(metaReducers)) : function (r) { return r; };\n    return function (reducer, initialState) {\n        reducer = reducerFactory(reducer);\n        return function (state, action) {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\nvar __extends$2 = (undefined && undefined.__extends) || /*@__PURE__*/ (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar ReducerObservable = /** @class */ (function (_super) {\n    __extends$2(ReducerObservable, _super);\n    function ReducerObservable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ReducerObservable;\n}(Observable));\nvar ReducerManagerDispatcher = /** @class */ (function (_super) {\n    __extends$2(ReducerManagerDispatcher, _super);\n    function ReducerManagerDispatcher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ReducerManagerDispatcher;\n}(ActionsSubject));\nvar UPDATE = '@ngrx/store/update-reducers';\nvar ReducerManager = /** @class */ (function (_super) {\n    __extends$2(ReducerManager, _super);\n    function ReducerManager(dispatcher, initialState, reducers, reducerFactory) {\n        var _this = _super.call(this, reducerFactory(reducers, initialState)) || this;\n        _this.dispatcher = dispatcher;\n        _this.initialState = initialState;\n        _this.reducers = reducers;\n        _this.reducerFactory = reducerFactory;\n        return _this;\n    }\n    ReducerManager.prototype.addFeature = function (_a) {\n        var reducers = _a.reducers, reducerFactory = _a.reducerFactory, metaReducers = _a.metaReducers, initialState = _a.initialState, key = _a.key;\n        var reducer = typeof reducers === 'function'\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n            : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n        this.addReducer(key, reducer);\n    };\n    ReducerManager.prototype.removeFeature = function (_a) {\n        var key = _a.key;\n        this.removeReducer(key);\n    };\n    ReducerManager.prototype.addReducer = function (key, reducer) {\n        this.reducers = __assign({}, this.reducers, (_a = {}, _a[key] = reducer, _a));\n        this.updateReducers(key);\n        var _a;\n    };\n    ReducerManager.prototype.removeReducer = function (key) {\n        this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n        this.updateReducers(key);\n    };\n    ReducerManager.prototype.updateReducers = function (key) {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({\n            type: UPDATE,\n            feature: key,\n        });\n    };\n    ReducerManager.prototype.ngOnDestroy = function () {\n        this.complete();\n    };\n    return ReducerManager;\n}(BehaviorSubject));\nvar REDUCER_MANAGER_PROVIDERS = [\n    ReducerManager,\n    { provide: ReducerObservable, useExisting: ReducerManager },\n    { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\nvar __extends$4 = (undefined && undefined.__extends) || /*@__PURE__*/ (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar ScannedActionsSubject = /** @class */ (function (_super) {\n    __extends$4(ScannedActionsSubject, _super);\n    function ScannedActionsSubject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScannedActionsSubject.prototype.ngOnDestroy = function () {\n        this.complete();\n    };\n    return ScannedActionsSubject;\n}(Subject));\nvar SCANNED_ACTIONS_SUBJECT_PROVIDERS = [\n    ScannedActionsSubject,\n];\nvar __extends$3 = (undefined && undefined.__extends) || /*@__PURE__*/ (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read$2 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m)\n        return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n    }\n    catch (error) {\n        e = { error: error };\n    }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"]))\n                m.call(i);\n        }\n        finally {\n            if (e)\n                throw e.error;\n        }\n    }\n    return ar;\n};\nvar StateObservable = /** @class */ (function (_super) {\n    __extends$3(StateObservable, _super);\n    function StateObservable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StateObservable;\n}(Observable));\nvar State = /** @class */ (function (_super) {\n    __extends$3(State, _super);\n    function State(actions$, reducer$, scannedActions, initialState) {\n        var _this = _super.call(this, initialState) || this;\n        var actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n        var withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n        var seed = { state: initialState };\n        var stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n        _this.stateSubscription = stateAndAction$.subscribe(function (_a) {\n            var state = _a.state, action = _a.action;\n            _this.next(state);\n            scannedActions.next(action);\n        });\n        return _this;\n    }\n    State.prototype.ngOnDestroy = function () {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    };\n    State.INIT = INIT;\n    return State;\n}(BehaviorSubject));\nfunction reduceState(stateActionPair, _a) {\n    if (stateActionPair === void 0) {\n        stateActionPair = { state: undefined };\n    }\n    var _b = __read$2(_a, 2), action = _b[0], reducer = _b[1];\n    var state = stateActionPair.state;\n    return { state: reducer(state, action), action: action };\n}\nvar STATE_PROVIDERS = [\n    State,\n    { provide: StateObservable, useExisting: State },\n];\nvar __extends = (undefined && undefined.__extends) || /*@__PURE__*/ (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m)\n        return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n    }\n    catch (error) {\n        e = { error: error };\n    }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"]))\n                m.call(i);\n        }\n        finally {\n            if (e)\n                throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar Store = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Store, _super);\n    function Store(state$, actionsObserver, reducerManager) {\n        var _this = _super.call(this) || this;\n        _this.actionsObserver = actionsObserver;\n        _this.reducerManager = reducerManager;\n        _this.source = state$;\n        return _this;\n    }\n    Store.prototype.select = function (pathOrMapFn) {\n        var paths = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            paths[_i - 1] = arguments[_i];\n        }\n        return select.call.apply(select, __spread([null, pathOrMapFn], paths))(this);\n    };\n    Store.prototype.lift = function (operator) {\n        var store = new Store(this, this.actionsObserver, this.reducerManager);\n        store.operator = operator;\n        return store;\n    };\n    Store.prototype.dispatch = function (action) {\n        this.actionsObserver.next(action);\n    };\n    Store.prototype.next = function (action) {\n        this.actionsObserver.next(action);\n    };\n    Store.prototype.error = function (err) {\n        this.actionsObserver.error(err);\n    };\n    Store.prototype.complete = function () {\n        this.actionsObserver.complete();\n    };\n    Store.prototype.addReducer = function (key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    };\n    Store.prototype.removeReducer = function (key) {\n        this.reducerManager.removeReducer(key);\n    };\n    return Store;\n}(Observable));\nvar STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn) {\n    var paths = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        paths[_i - 1] = arguments[_i];\n    }\n    return function selectOperator(source$) {\n        var mapped$;\n        if (typeof pathOrMapFn === 'string') {\n            mapped$ = source$.pipe(pluck.apply(void 0, __spread([pathOrMapFn], paths)));\n        }\n        else if (typeof pathOrMapFn === 'function') {\n            mapped$ = source$.pipe(map(pathOrMapFn));\n        }\n        else {\n            throw new TypeError(\"Unexpected type '\" + typeof pathOrMapFn + \"' in select operator,\" +\n                \" expected 'string' or 'function'\");\n        }\n        return mapped$.pipe(distinctUntilChanged());\n    };\n}\nvar __read$3 = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m)\n        return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n    }\n    catch (error) {\n        e = { error: error };\n    }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"]))\n                m.call(i);\n        }\n        finally {\n            if (e)\n                throw e.error;\n        }\n    }\n    return ar;\n};\nvar __spread$2 = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read$3(arguments[i]));\n    return ar;\n};\nfunction isEqualCheck(a, b) {\n    return a === b;\n}\nfunction defaultMemoize(t, isEqual) {\n    if (isEqual === void 0) {\n        isEqual = isEqualCheck;\n    }\n    var lastArguments = null;\n    var lastResult = null;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function memoized() {\n        if (!lastArguments) {\n            lastResult = t.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            if (!isEqual(arguments[i], lastArguments[i])) {\n                lastResult = t.apply(null, arguments);\n                lastArguments = arguments;\n                return lastResult;\n            }\n        }\n        return lastResult;\n    }\n    return { memoized: memoized, reset: reset };\n}\nfunction createSelector() {\n    var input = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        input[_i] = arguments[_i];\n    }\n    return createSelectorFactory(defaultMemoize).apply(void 0, __spread$2(input));\n}\nfunction defaultStateFn(state, selectors, memoizedProjector) {\n    var args = selectors.map(function (fn) { return fn(state); });\n    return memoizedProjector.memoized.apply(null, args);\n}\nfunction createSelectorFactory(memoize, options) {\n    if (options === void 0) {\n        options = {\n            stateFn: defaultStateFn,\n        };\n    }\n    return function () {\n        var input = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            input[_i] = arguments[_i];\n        }\n        var args = input;\n        if (Array.isArray(args[0])) {\n            var _a = __read$3(args), head = _a[0], tail = _a.slice(1);\n            args = __spread$2(head, tail);\n        }\n        var selectors = args.slice(0, args.length - 1);\n        var projector = args[args.length - 1];\n        var memoizedSelectors = selectors.filter(function (selector) {\n            return selector.release && typeof selector.release === 'function';\n        });\n        var memoizedProjector = memoize(function () {\n            var selectors = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                selectors[_i] = arguments[_i];\n            }\n            return projector.apply(null, selectors);\n        });\n        var memoizedState = defaultMemoize(function (state) {\n            return options.stateFn.apply(null, [state, selectors, memoizedProjector]);\n        });\n        function release() {\n            memoizedState.reset();\n            memoizedProjector.reset();\n            memoizedSelectors.forEach(function (selector) { return selector.release(); });\n        }\n        return Object.assign(memoizedState.memoized, {\n            release: release,\n            projector: memoizedProjector.memoized,\n        });\n    };\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector(function (state) { return state[featureName]; }, function (featureState) { return featureState; });\n}\nvar __assign$1 = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nvar StoreRootModule = /** @class */ /*@__PURE__*/ (function () {\n    function StoreRootModule(actions$, reducer$, scannedActions$, store) {\n    }\n    return StoreRootModule;\n}());\nvar StoreFeatureModule = /** @class */ /*@__PURE__*/ (function () {\n    function StoreFeatureModule(features, featureReducers, reducerManager, root) {\n        this.features = features;\n        this.featureReducers = featureReducers;\n        this.reducerManager = reducerManager;\n        features\n            .map(function (feature, index) {\n            var featureReducerCollection = featureReducers.shift();\n            var reducers = featureReducerCollection[index];\n            return __assign$1({}, feature, { reducers: reducers, initialState: _initialStateFactory(feature.initialState) });\n        })\n            .forEach(function (feature) { return reducerManager.addFeature(feature); });\n    }\n    StoreFeatureModule.prototype.ngOnDestroy = function () {\n        var _this = this;\n        this.features.forEach(function (feature) {\n            return _this.reducerManager.removeFeature(feature);\n        });\n    };\n    return StoreFeatureModule;\n}());\nvar StoreModule = /** @class */ /*@__PURE__*/ (function () {\n    function StoreModule() {\n    }\n    StoreModule.forRoot = function (reducers, config) {\n        if (config === void 0) {\n            config = {};\n        }\n        return {\n            ngModule: StoreRootModule,\n            providers: [\n                { provide: _INITIAL_STATE, useValue: config.initialState },\n                {\n                    provide: INITIAL_STATE,\n                    useFactory: _initialStateFactory,\n                    deps: [_INITIAL_STATE],\n                },\n                { provide: _INITIAL_REDUCERS, useValue: reducers },\n                {\n                    provide: _STORE_REDUCERS,\n                    useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n                },\n                {\n                    provide: INITIAL_REDUCERS,\n                    deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n                    useFactory: _createStoreReducers,\n                },\n                {\n                    provide: META_REDUCERS,\n                    useValue: config.metaReducers ? config.metaReducers : [],\n                },\n                {\n                    provide: _REDUCER_FACTORY,\n                    useValue: config.reducerFactory\n                        ? config.reducerFactory\n                        : combineReducers,\n                },\n                {\n                    provide: REDUCER_FACTORY,\n                    deps: [_REDUCER_FACTORY, META_REDUCERS],\n                    useFactory: createReducerFactory,\n                },\n                ACTIONS_SUBJECT_PROVIDERS,\n                REDUCER_MANAGER_PROVIDERS,\n                SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n                STATE_PROVIDERS,\n                STORE_PROVIDERS,\n            ],\n        };\n    };\n    StoreModule.forFeature = function (featureName, reducers, config) {\n        if (config === void 0) {\n            config = {};\n        }\n        return {\n            ngModule: StoreFeatureModule,\n            providers: [\n                {\n                    provide: STORE_FEATURES,\n                    multi: true,\n                    useValue: {\n                        key: featureName,\n                        reducerFactory: config.reducerFactory\n                            ? config.reducerFactory\n                            : combineReducers,\n                        metaReducers: config.metaReducers ? config.metaReducers : [],\n                        initialState: config.initialState,\n                    },\n                },\n                { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n                {\n                    provide: _FEATURE_REDUCERS_TOKEN,\n                    multi: true,\n                    useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n                },\n                {\n                    provide: FEATURE_REDUCERS,\n                    multi: true,\n                    deps: [\n                        Injector,\n                        _FEATURE_REDUCERS,\n                        [new Inject(_FEATURE_REDUCERS_TOKEN)],\n                    ],\n                    useFactory: _createFeatureReducers,\n                },\n            ],\n        };\n    };\n    return StoreModule;\n}());\nfunction _createStoreReducers(injector, reducers, tokenReducers) {\n    return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\nfunction _createFeatureReducers(injector, reducerCollection, tokenReducerCollection) {\n    var reducers = reducerCollection.map(function (reducer, index) {\n        return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n    });\n    return reducers;\n}\nfunction _initialStateFactory(initialState) {\n    if (typeof initialState === 'function') {\n        return initialState();\n    }\n    return initialState;\n}\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { ACTIONS_SUBJECT_PROVIDERS as ɵngrx_modules_store_store_c, REDUCER_MANAGER_PROVIDERS as ɵngrx_modules_store_store_d, SCANNED_ACTIONS_SUBJECT_PROVIDERS as ɵngrx_modules_store_store_e, STATE_PROVIDERS as ɵngrx_modules_store_store_f, STORE_PROVIDERS as ɵngrx_modules_store_store_b, Store, select, combineReducers, compose, createReducerFactory, ActionsSubject, INIT, ReducerManager, ReducerObservable, ReducerManagerDispatcher, UPDATE, ScannedActionsSubject, createSelector, createSelectorFactory, createFeatureSelector, defaultMemoize, defaultStateFn, State, StateObservable, reduceState, INITIAL_STATE, _REDUCER_FACTORY, REDUCER_FACTORY, _INITIAL_REDUCERS, INITIAL_REDUCERS, STORE_FEATURES, _INITIAL_STATE, META_REDUCERS, _STORE_REDUCERS, _FEATURE_REDUCERS, FEATURE_REDUCERS, _FEATURE_REDUCERS_TOKEN, StoreModule, StoreRootModule, StoreFeatureModule, _initialStateFactory, _createStoreReducers, _createFeatureReducers };\n//# sourceMappingURL=store.js.map\n",null]}